{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/JavaScript","result":{"pageContext":{"currentCategory":"JavaScript","categories":["All","IT","doilNote","algorithm","탐구생활","Doyclopedia","location","개발일지","JavaScript"],"edges":[{"node":{"id":"60663697-db0f-55d4-82d5-98168ccb8921","excerpt":"자바스크립트 비동기 처리와 콜백 함수\n프로미스?\nasync & await\n함수 표현 INTRO 프론트단에서 간단히 작동할 동작들을 스크립트로 작성할 필요가 많아졌다.\n문법적으로 생소한 부분들을 공부 겸, 정리해두려고 한다. 비동기 처리 비동기 처리가 무엇이며, 왜 비동기 처리가 필요할까?\n기본적으로 프로그램은 절차적으로 동작을 수행한다. 이 말은 다음과 같다. c의 값을 알기 위해서는 a가 수행되고, b가 수행되고 난 후에야만 가능하다.\nfunction1()이 종료되고, function2()가 종료되어야만 c의 값이 결정되는 것이다.\n이것이 절차적으로 수행되는 것이며 이러한 방식을\n요청을 보낸 후 응답을 받아야만 다음 태스크가 수행되는,동기식 처리라고 한다.\n이러한 처리가 왜 문제가 될까?  가끔 마트에서 급하게 물건 하나를 살 일이 있어서 들렀을 때가 생각난다.\n나는 진짜 딱 한개의 물건만 계산하면 되지만, \n앞줄의 사람들이 다 계산될 때 까지 기다려야 한다. 동기식 처리는 이 …","fields":{"slug":"/IT/JavaScript/async/"},"frontmatter":{"categories":"IT JavaScript","title":"자바스크립트 비동기 처리 study","date":"November 05, 2021"}},"next":{"fields":{"slug":"/IT/algorithm/PG1-진법/"}},"previous":null}]}},"staticQueryHashes":["1073350324","2938748437"]}